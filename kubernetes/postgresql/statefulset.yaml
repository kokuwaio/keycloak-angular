apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:15.2
          envFrom:
            - secretRef:
                name: postgresql-secret
          ports:
            - name: postgresql
              containerPort: 5432
          startupProbe:
            exec:
              command: [/bin/sh, -c, exec pg_isready]
            initialDelaySeconds: 10
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 50
          readinessProbe:
            exec:
              command: [/bin/sh, -c, exec pg_isready]
          livenessProbe:
            exec:
              command: [/bin/sh, -c, exec pg_isready]
          volumeMounts:
            - name: config
              mountPath: /docker-entrypoint-initdb.d/init.sh
              subPath: init.sh
              readOnly: true
            - name: data
              mountPath: /var/lib/postgresql
            - name: run
              mountPath: /var/run/postgresql
            - name: tmp
              mountPath: /tmp
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      volumes:
        - name: config
          configMap:
            name: postgresql-config
        - name: data
          hostPath:
            path: /tmp/postgresql
            type: DirectoryOrCreate
        - name: run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
